pipeline {
    agent any
    
    environment {
        registry = "arun8123456/mypythonapp"
        //- update your credentials ID after creating credentials for connecting to Docker Hub
        registryCredential = 'DockerhubID'
        dockerImage = ''
    }

    stages {
        stage('Checkout') {
            steps {
                checkout scmGit(branches: [[name: '*/main']], extensions: [], userRemoteConfigs: [[url: 'https://github.com/ArunK2654/jenkins']])
            }
        }
        stage('Build Custom Image') {
            steps {
                sh 'ls'
                sh 'whoami'
                script {
                    dockerImage = docker.build registry //+ ":$BUILD_NUMBER"
                }
                sh 'docker images'
            }
        }
        stage('busybox image') {
            steps {
                script {
                    busyboximage = docker.image('busybox:latest')
                }
                sh 'ls'
                sh 'docker ps -a'
            }
        }
        stage('Upload Docker Image to repository') {
            steps{    
                script {
                    docker.withRegistry( '', registryCredential ) {
                    dockerImage.push()
                    }
                }
            }
        }
        stage('docker stop container') {
            steps {
                sh 'docker ps -f name=mypythonappContainer -q | xargs --no-run-if-empty docker container stop'
                sh 'docker container ls -a -fname=mypythonappContainer -q | xargs -r docker container rm'
            }
        }
        stage('Docker Run') {
            steps{
                script {
                    dockerImage.run("-p 9090:80 --rm --name mypythonappContainer")
                    
                }
            }
        }
        stage('Docker Container status') {
            steps{
                sh 'docker inspect mypythonappContainer'
            }
        }
        stage('K8s Deployment') {
            steps{
                withKubeConfig(caCertificate: '', clusterName: 'kubernetes', contextName: '', credentialsId: 'k8sec', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://10.128.0.3:6443') {
                    // some block
                    sh 'kubectl apply -f kdeployment.yaml'
                    
                }
            }
        }
        stage('K8s Service Deployment') {
            steps{
                withKubeConfig(caCertificate: '', clusterName: 'kubernetes', contextName: '', credentialsId: 'k8sec', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://10.128.0.3:6443') {
                    // some block
                    sh 'kubectl apply -f kservice.yaml'
                    
                }
            }
        }
        stage('K8s get pods') {
            steps{
                withKubeConfig(caCertificate: '', clusterName: 'kubernetes', contextName: '', credentialsId: 'k8sec', namespace: 'webapps', restrictKubeConfigAccess: false, serverUrl: 'https://10.128.0.3:6443') {
                    sh 'kubectl get pods -n webapps'
                    
                }
            }
        }
    }
}
